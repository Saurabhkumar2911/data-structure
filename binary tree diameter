#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node *left;
    node *right;

    node(int x)
    {
        data=x;
        left=NULL;
        right=NULL;
    }
};

int height(node* root)
{
    if(!root)
        return 0;
    return max(height(root->left), height(root->right))+1;
}

int diameter(node* root)
{
    if(!root)
        return 0;
    int lheight = height(root->left);
    int rheight = height(root->right);

    int currdiameter = lheight + rheight + 1;

    int ldiameter = diameter(root->left);
    int rdiameter = diameter(root->right);

    return max(currdiameter, max(ldiameter, rdiameter));
}

int opdiameter(node *root, int *height)
{
    if(!root){
        *height = 0;
        return 0;
    }

    int lh = 0, rh = 0;

    int ldiameter = opdiameter(root->left, &lh);
    int rdiameter = opdiameter(root->right, &rh);

    int currdiameter = lh + rh + 1;
    *height = max(lh, rh) + 1;
    return max(currdiameter, max(ldiameter, rdiameter));
}

int main()
{
    node *root=new node(1);
    root->left=new node(2);
    root->right=new node(3);
    root->left->left=new node(4);
    root->left->right=new node(5);
    root->right->left=new node(6);
    root->right->right=new node(7);

    cout << diameter(root)<<endl;

    int height = 0;
    cout << opdiameter(root, &height);

    return 0;
}
