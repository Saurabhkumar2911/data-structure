#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node *left;
    node *right;
    node(int x)
    {
        data = x;
        left = NULL;
        right = NULL;
    }
};

int search(int inorder[], int start, int end, int val)
{
    for (int i = 0; i < end; i++)
    {
        if(inorder[i]==val)
            return i;
    }
}

node *buildtree(int postorder[], int inorder[], int start, int end)
{
    static int idx=4;
    if(start>end)
        return NULL;

    int val = postorder[idx];
    idx--;

    node *curr = new node(val);
    if(start==end)
        return curr;

    int pos = search(inorder, start, end, val);
    curr->right = buildtree(postorder, inorder, pos + 1, end);
    curr->left = buildtree(postorder, inorder, start, pos - 1);

    return curr;
}
void print(node *root)
{
    if(!root)
        return;

    print(root->left);
    cout << root->data << " ";
    print(root->right);
}

int main()
{
    int postorder[]={4,2,5,3,1};
    int inorder[]={4,2,1,5,3};

    node *root = buildtree(postorder, inorder, 0, 4);
    print(root);

    return 0;
}
