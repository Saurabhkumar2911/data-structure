#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node *left;
    node *right;
    node(int x)
    {
        data = x;
        right = NULL;
        left = NULL;
    }
};

int search(int inorder[], int start, int end,int curr)
{
    for (int i = 0; i < end; i++)
    {
        if(inorder[i]==curr)
            return i;
    }
}

node *buildtree(int preorder[], int inorder[], int start, int end)
{
    static int idx = 0;

    if(start>end)
        return NULL;

    int curr = preorder[idx];
    idx++;
    node *temp = new node(curr);

    if(start==end)
        return temp;

    int pos = search(inorder, start, end, curr);
    temp -> left = buildtree(preorder, inorder, start, pos-1);
    temp -> right = buildtree(preorder, inorder, pos + 1, end);

    return temp;
}

void print(node *root)
{
    if(!root)
        return;

    print(root->left);
    cout << root->data << " ";
    print(root->right);

}

int main()
{
    int preorder[] = {1,2,4,3,5};
    int inorder[] = {4,2,1,5,3};

    node *root=buildtree(preorder, inorder, 0, 4);
    print(root);

    return 0;
}
